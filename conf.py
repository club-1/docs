# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
from sphinx import __version__ as sphinx_version
from myst_parser import __version__ as myst_version
from sphinx_rtd_theme import __version__ as rtd_version
from docutils import __version__ as docutils_version
import sys
sys.path.insert(0, os.path.abspath('./_ext'))


# -- Project information -----------------------------------------------------

project = os.environ['PACKAGE']
copyright = '2022, ' + os.environ['AUTHORS']
author = os.environ['AUTHORS']
version = os.environ['VERSION']
release = os.environ['RELEASE']


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'myst_parser',
    'french_typography',
    'term_tooltips',
    'index_role',
]

# Allow to create implicit reference to headings up to level 6.
# See: https://docs.readthedocs.io/en/stable/guides/cross-referencing-with-sphinx.html#implicit-targets
myst_heading_anchors = 6

# Enable Some MyST extensions.
myst_enable_extensions = [
    'substitution',
]

# Define some substitution strings.
myst_substitutions = {
    'sphinx_version': sphinx_version,
    'myst_version': myst_version,
    'rtd_version': rtd_version,
    'docutils_version': docutils_version,
}

# Strip everything after the last emdash in term's tooltips.
term_tooltips_apply_function = lambda s: s.rsplit('—', 1)[0].strip()

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = os.environ['LOCALE']

# Set by make.
languages = os.environ['LANGUAGES'].split(' ')

# Directory that contains the translated messages
locale_dirs = ['_locales']

# Managed by make and gettext.
gettext_auto_build = False

# Use a single POT and PO file par language.
gettext_compact = 'package'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [
    '_build',
    'README*',
    'Thumbs.db',
    '.DS_Store',
]

# Enable smart quotes at Sphinx level to support localized quotes.
smartquotes = True

# Date formats for today, for instance in LaTeX.
# Use locale’s appropriate date representation.
today_fmt = '%x'

# Add numbers to figures
numfig = True

# List of downloads to include in the site version seletor.
downloads = []

if "DOWNLOADS" in os.environ:
    downloads = os.environ['DOWNLOADS'].split(' ')

# -- Options for HTML output -------------------------------------------------

html_favicon = '_static/favicon.ico'

# These paths are either relative to html_static_path
# or fully qualified paths (eg. https://...)
html_css_files = [
    'club1.css',
]

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'sphinx_rtd_theme'

# Do not copy source as the link to view source as been replaced by a link to
# GitHub.
html_copy_source = False

# Only show source link for french docs as other languages are stored in .po.
html_show_sourcelink = language == 'fr'

html_context = {
    'version': release,
    'display_github': language == 'fr',
    'github_user': 'club-1',
    'github_repo': 'docs',
    'github_version': f'{version}/',
    'languages': [(lang, f'../{lang}/') for lang in languages],
    'downloads': [(dl.split('.')[-1], dl) for dl in downloads],
}

html_theme_options = {
    'prev_next_buttons_location': 'bottom',
    'style_external_links': False,
    'vcs_pageview_mode': 'edit',
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# The domain is used for code documentation, so no need for it here.
primary_domain = None

# -- Options for MAN output --------------------------------------------------

# Show URLs after text in MAN output.
man_show_urls = True

# -- Options for EPUB output -------------------------------------------------

# Exclude files that are not needed in EPUB format.
epub_exclude_files = [
    # Favicon is only needed for HTML output.
    '_static/favicon.ico',
    # This file is downloaded from the website.
    '_static/tutos/mes-premiers-pas-sur-le-web/bonjour.txt', ]

# -- Options for LATEX output ------------------------------------------------

# Use LuaLaTeX for Unicode support, especially emojis.
latex_engine = 'lualatex'

# Add footnote for external URLs, useful for printed copies.
latex_show_urls = 'footnote'

# Show pages for internal refs, useful for printed copies.
latex_show_pagerefs = True

latex_additional_files = ['_templates/club1.sty', '_templates/packages.sty']

latex_elements = {
    # Always use A4 paper.
    'papersize': 'a4paper',
    # Make sure to use babel instead of polyglossia.
    'babel': r'\usepackage{babel}',
    # Uniformization of chapter style, disable Sphinx default.
    'fncychap': '',
    # Use names for colors.
    'passoptionstopackages': r'\PassOptionsToPackage{svgnames}{xcolor}',
    # Clear default font config.
    'fontpkg': '',
    # Packages to include before 'hyperref' and 'sphinx'.
    'extrapackages': r'\usepackage{packages}',
    # Add custom preamble after 'hyperref' and 'sphinx'.
    'preamble': r'\usepackage{club1}',
}

# -- Options for linkcheck output --------------------------------------------

# Allow some redirects.
linkcheck_allowed_redirects = {
        r'https://github\.com/club-1/docs/edit/.*': r'https://github\.com/login\?return_to=https%3A%2F%2Fgithub\.com%2Fclub-1%2Fdocs%2Fedit%2F.*'
}
